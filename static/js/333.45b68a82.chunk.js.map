{"version":3,"file":"static/js/333.45b68a82.chunk.js","mappings":"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","sources":["API.js","components/MovieList/List.styled.js","components/MovieList/MovieList.jsx","components/pages/Form.styled.js","components/pages/Movies.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst optionsAxios = {\n    baseURL: 'https://api.themoviedb.org',\n    headers: {\n    // accept: 'application/json',\n    Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJmNjE2MjdjOWNmYzQ5YjY0MDUxZmE4ZWU2NGFmMDM4MSIsInN1YiI6IjY1N2Q4NDZiYjdmYmJkMDZjODMwNTVkZSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.7NWSj1-y7xBlR5IWWT6t3fEcBUOHkAiJumA6Nwpm4FQ'\n  }\n}\n\nasync function fetchMovies (){\n  return await axios.get('/3/trending/all/day?language=en-US', optionsAxios);\n   \n}\n\nasync function fetchMoviesBySearchWord(searchWord) {\n  return await axios.get(`/3/search/movie?query=${searchWord}&include_adult=false&language=en-US&page=1`, optionsAxios);\n}\n\nasync function fetchMovieDetails(movie_id) {\n  return await axios.get(`/3/movie/${movie_id}`, optionsAxios);\n}\n\nasync function fetchMovieCast(movie_id) {\n  return await axios.get(`/3/movie/${movie_id}/credits`, optionsAxios);\n}\n\nasync function fetchMovieReviews(movie_id) {\n  return await axios.get(`/3/movie/${movie_id}/reviews`, optionsAxios);\n}\n\n\nexport { fetchMovies, fetchMoviesBySearchWord, fetchMovieDetails, fetchMovieCast, fetchMovieReviews };","import { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const ListItem = styled.li(() => {\n    return ({\n        marginBottom: '8px',\n        '&:last-child': {\n            marginBottom: 0,\n        }\n    })\n});\n\nexport const LinkStyled = styled(Link)`\n    text-decoration: none;\n    \n    &:hover{\n        color: white;\n        background-color: gray;\n    }\n`","import { fetchMovies, fetchMoviesBySearchWord } from \"API\";\nimport { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport {ListItem, LinkStyled } from \"./List.styled\";\nimport { Notify } from \"notiflix\";\n\nconst MovieList = ({ searchWord = '' }) => {\n    \n    const location = useLocation();\n    const [movies, setMovies] = useState(null);\n    async function getMovies(searchWord) {\n            try {\n                if (!searchWord) {\n            const resp = await fetchMovies();\n                    setMovies(resp.data.results)\n                }\n                else {\n            const resp = await fetchMoviesBySearchWord(searchWord);\n                setMovies(resp.data.results);\n        }\n            }\n            catch (error) {\n                Notify.failure( \"Try reloading the page) \" + error.message)\n        }  \n    }\n    useEffect(() => {\n        getMovies(searchWord);\n    }, [searchWord])\n\n    return (\n        movies && \n        (<ul>\n            {movies.map((movie) => (<ListItem key={movie.id}>\n                \n                {/* {(location.pathname) === '/' && <LinkStyled to={`movies/${movie.id}`} state={{ from:'/'}}>\n                    {movie.name || movie.title}\n                </LinkStyled>\n                }  */}\n                {(location.pathname) === '/movies' ? <LinkStyled to={`${movie.id}`} state={{ from: `/movies?query=${searchWord}` }}>\n                    {movie.name || movie.title}\n                </LinkStyled>\n                    : <LinkStyled to={`movies/${movie.id}`} state={{ from:'/'}}>\n                    {movie.name || movie.title}\n                </LinkStyled>\n                }\n            \n            </ListItem>))}\n        </ul>)\n        )\n};\n\nexport default MovieList;","import styled from \"styled-components\";\n\nconst Form = styled.form(() => {\n    return ({\n        paddingTop: \"20px\",\n        paddingLeft: \"20px\",\n        input: {\n            outline: 'none',\n            border: 'solid 1px lightgrey',\n            borderRadius: '5px',\n            padding: '4px 8px',\n            marginRight: '15px',\n        },\n        'input:focus': {\n            border: 'solid 2px grey',\n        },\n        button: {\n            padding: '4px 8px',\n            border: 'solid 1px lightgrey',\n            borderRadius: '5px',\n        },\n        'button:hover, button:focus': {\n            borderColor: 'grey',\n            backgroundColor: 'grey',\n            color: 'white',\n        }\n    })\n});\n\nexport default Form;","import MovieList from \"components/MovieList/MovieList\";\n// import { Suspense, lazy } from \"react\";\nimport {  useSearchParams } from \"react-router-dom\";\nimport Form from \"./Form.styled\";\n\n// const MovieList = lazy(()=> import(\"../MovieList/MovieList\"))\nconst Movies = () => {\n    const [searchParams, setSearchParams] = useSearchParams();\n    \n    function handleSubmit(event) {\n        event.preventDefault();\n        const form = event.target;\n        const searchRequest = form.elements.search.value;\n        \n         if (searchRequest) {\n             setSearchParams({ query: searchRequest });\n        }\n        //  else {\n        //      setSearchParams({}); \n        // }\n        \n        form.reset();\n    \n    }\n\n    return (\n        <main>\n    <Form onSubmit={handleSubmit}>\n            <input name=\"search\"/>\n            <button type='submit'>Search</button>\n        </Form>\n            {/* {searchParams.get('query') && (<MovieList searchWord={searchParams.get('query')} />)} */}\n            {searchParams.get('query') && (\n                <>\n                    <MovieList searchWord={searchParams.get('query')} />\n                </>)}\n        </main>)\n}\nexport default Movies;"],"names":["optionsAxios","baseURL","headers","Authorization","fetchMovies","_fetchMovies","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","axios","abrupt","sent","stop","fetchMoviesBySearchWord","_x","_fetchMoviesBySearchWord","_callee2","searchWord","_context2","concat","fetchMovieDetails","_x2","_fetchMovieDetails","_callee3","movie_id","_context3","fetchMovieCast","_x3","_fetchMovieCast","_callee4","_context4","fetchMovieReviews","_x4","_fetchMovieReviews","_callee5","_context5","ListItem","styled","marginBottom","LinkStyled","Link","_templateObject","_taggedTemplateLiteral","_ref","_ref$searchWord","location","useLocation","_useState","useState","_useState2","_slicedToArray","movies","setMovies","_getMovies","resp","_resp","data","results","t0","Notify","message","useEffect","getMovies","_jsx","children","map","movie","pathname","to","id","state","from","name","title","paddingTop","paddingLeft","input","outline","border","borderRadius","padding","marginRight","button","borderColor","backgroundColor","color","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","_jsxs","Form","onSubmit","event","preventDefault","form","target","searchRequest","elements","search","value","query","reset","type","get","_Fragment","MovieList"],"sourceRoot":""}