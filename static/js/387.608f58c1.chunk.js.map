{"version":3,"file":"static/js/387.608f58c1.chunk.js","mappings":"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","sources":["API.js","components/Cast/Cast.styled.js","components/Cast/Cast.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst optionsAxios = {\n    baseURL: 'https://api.themoviedb.org',\n    headers: {\n    // accept: 'application/json',\n    Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJmNjE2MjdjOWNmYzQ5YjY0MDUxZmE4ZWU2NGFmMDM4MSIsInN1YiI6IjY1N2Q4NDZiYjdmYmJkMDZjODMwNTVkZSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.7NWSj1-y7xBlR5IWWT6t3fEcBUOHkAiJumA6Nwpm4FQ'\n  }\n}\n\nasync function fetchMovies (){\n  return await axios.get('/3/trending/all/day?language=en-US', optionsAxios);\n   \n}\n\nasync function fetchMoviesBySearchWord(searchWord) {\n  return await axios.get(`/3/search/movie?query=${searchWord}&include_adult=false&language=en-US&page=1`, optionsAxios);\n}\n\nasync function fetchMovieDetails(movie_id) {\n  return await axios.get(`/3/movie/${movie_id}`, optionsAxios);\n}\n\nasync function fetchMovieCast(movie_id) {\n  return await axios.get(`/3/movie/${movie_id}/credits`, optionsAxios);\n}\n\nasync function fetchMovieReviews(movie_id) {\n  return await axios.get(`/3/movie/${movie_id}/reviews`, optionsAxios);\n}\n\n\nexport { fetchMovies, fetchMoviesBySearchWord, fetchMovieDetails, fetchMovieCast, fetchMovieReviews };","import styled from \"styled-components\";\n\nconst CastList = styled.ul(() => {\n    return ({\n        listStyle: 'none',\n        textAlign: 'center',\n        padding: '20px',\n        display: 'flex',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n        gap: '15px',\n        li: {\n            paddingBottom: '8px',\n            objectFit: 'cover',\n            boxShadow: 'rgba(50, 50, 93, 0.25) 0px 2px 5px -1px, rgba(0, 0, 0, 0.3) 0px 1px 3px -1px',\n            width: '150px',\n            border: 'solid 1px lightgrey',\n            borderRadius: '6px',\n            overflow: 'hidden',\n            display: 'flex',\n            flexDirection: 'column',\n            gap: '8px',\n            alignItems: 'center',\n            img: {\n                width: '100%',\n                height: '200px',\n                objectFit: 'cover',\n            },\n            p: {\n                margin: 0,\n            }\n        }\n    })\n});\n\nexport default CastList;","import { fetchMovieCast } from \"API\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport CastList from \"./Cast.styled\";\nimport { Notify } from \"notiflix\";\n\nconst Cast = () => {\n    const [cast, setCast] = useState(null);\n    const searchParams = useParams();\n    const { id } = searchParams;\n    const defaultImg = 'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n    \n    async function getCast(id) {\n        try {\n            const resp = await fetchMovieCast(id);\n            const result = resp.data.cast;\n            if (result.length === 0) {\n                setCast(null);\n                Notify.failure(\"There is no information about cast\");\n                return;\n            }\n            setCast(resp.data.cast);\n        }\n        catch (error) {\n            console.log(error.message)\n        }\n    }\n    useEffect(() => {\n        getCast(id);\n    }, [id])\n\n    return (\n        cast && (\n            <section>\n                <CastList>\n                    {cast.map(({ id, character, name, profile_path }) => (\n                        <li key={id}>\n                            <img src={profile_path ? `https://image.tmdb.org/t/p/w500/${profile_path}` : defaultImg} alt={name} width={70} />\n                            <p>{name}</p>\n                            {character && (\n                                <>\n                                    <b>Character:</b>                    \n                                    <p> {character}</p>\n                                </>\n                            )}\n                            \n                        </li>))}\n                </CastList>\n            </section>\n        )\n        \n    )\n}\nexport default Cast;"],"names":["optionsAxios","baseURL","headers","Authorization","fetchMovies","_fetchMovies","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","axios","abrupt","sent","stop","fetchMoviesBySearchWord","_x","_fetchMoviesBySearchWord","_callee2","searchWord","_context2","concat","fetchMovieDetails","_x2","_fetchMovieDetails","_callee3","movie_id","_context3","fetchMovieCast","_x3","_fetchMovieCast","_callee4","_context4","fetchMovieReviews","_x4","_fetchMovieReviews","_callee5","_context5","styled","listStyle","textAlign","padding","display","justifyContent","flexWrap","gap","li","paddingBottom","objectFit","boxShadow","width","border","borderRadius","overflow","flexDirection","alignItems","img","height","p","margin","_useState","useState","_useState2","_slicedToArray","cast","setCast","id","useParams","_getCast","resp","data","length","Notify","t0","console","log","message","useEffect","getCast","_jsx","children","CastList","map","_ref","character","name","profile_path","_jsxs","src","alt","_Fragment"],"sourceRoot":""}